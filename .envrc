# .envrc

if [[ -f "./lib/env-loader.sh" ]]; then
  # shellcheck disable=SC1091
  source ./lib/env-loader.sh local
fi

# Safely eval Devbox's direnv snippet into the current shell (non-blocking).
# This avoids spawning an interactive `devbox shell` from .envrc while still
# applying PATH and env changes from Devbox's init hooks.
if command -v devbox >/dev/null 2>&1; then
  # Save shell options (POSIX-ish) and temporarily disable nounset to avoid
  # aborting if devbox-generated snippets reference unset variables.
  _HOMELAB_SAVED_OPTS="$(set +o)"
  set +u
  # Evaluate the devbox-provided direnv snippet (defines use_devbox/use hooks).
  eval "$(devbox generate direnv --print-envrc 2>/dev/null)" || true
  # restore previous shell options
  eval "$_HOMELAB_SAVED_OPTS" || true
  unset _HOMELAB_SAVED_OPTS
fi

# Activate mise direnv snippet if available (non-blocking)
if command -v mise >/dev/null 2>&1; then
  eval "$(mise direnv activate 2>/dev/null)" || true
  # `use mise` is safe to call if mise provides it
  if command -v use >/dev/null 2>&1; then
    use mise 2>/dev/null || true
  fi
fi

# Common environment exports
export NODE_ENV=${NODE_ENV:-development}
export NX_DAEMON=${NX_DAEMON:-false}
export RUST_LOG=${RUST_LOG:-info}
export PYTHONPATH="$PWD"
export UV_CACHE_DIR="$PWD/.cache/uv"
export PNPM_HOME="${PNPM_HOME:-$HOME/.local/share/pnpm}"
export PATH="$PNPM_HOME:$HOME/.volta/bin:$HOME/.cargo/bin:$PATH"

echo "ðŸš€ Loaded homelab environment"
