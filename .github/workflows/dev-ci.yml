name: Dev CI

on:
  push:
    branches: ["dev"]
  pull_request:
    branches: ["dev"]

jobs:
  validate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 9
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "lts/*"
          cache: "pnpm"
      - name: Install dependencies
        run: pnpm install --frozen-lockfile
      - name: Bootstrap environment
        run: ./lib/env-loader.sh ci
      - name: Install uv & Python venv (CI)
        run: |
          # Pick a Python executable; export it for downstream steps
          if python3.12 -V >/dev/null 2>&1; then
            PYTHON_EXEC=python3.12
          else
            PYTHON_EXEC=python3
          fi
          echo "PYTHON_EXEC=$PYTHON_EXEC" >> "$GITHUB_ENV"

          # Install pipx with the chosen python and ensure it's on PATH
          # Note: `pipx ensurepath` is non-fatal in runners; warn but continue.
          "$PYTHON_EXEC" -m pip install --user --upgrade pipx
          "$PYTHON_EXEC" -m pipx ensurepath || echo "⚠️ pipx ensurepath failed; PATH may need adjustment"
          # If pipx is available as a module, call it through python -m pipx
          "$PYTHON_EXEC" -m pipx install uv

          # Ensure Python is installed under uv (idempotent)
          PYTHON_VERSION=$("$PYTHON_EXEC" -V | cut -d' ' -f2 | cut -d'.' -f1,2)
          uv python install "$PYTHON_VERSION" >/dev/null 2>&1

          # Create a project-local venv using uv (fallback to $PYTHON_EXEC -m venv)
          if [ ! -d .venv ]; then
            uv venv .venv --python "$PYTHON_VERSION" >/dev/null 2>&1 || "$PYTHON_EXEC" -m venv .venv
          fi

          # Persist venv to subsequent steps by exporting to GITHUB_ENV and prepending PATH
          echo "VIRTUAL_ENV=$PWD/.venv" >> "$GITHUB_ENV"
          echo "$PWD/.venv/bin" >> "$GITHUB_PATH"

          # Verify the virtual environment is properly activated
          echo "Python executable: $(which "$PYTHON_EXEC")"
          echo "Python version: $("$PYTHON_EXEC" --version)"
          echo "Virtual environment: $VIRTUAL_ENV"
      - name: Lint
        run: npx nx run-many --target=lint --all
      - name: Test
        run: npx nx run-many --target=test --all
