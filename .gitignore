# See https://docs.github.com/en/get-started/getting-started-with-git/ignoring-files for more about ignoring files.

# compiled output
dist
tmp
out-tsc

# dependencies
node_modules
.pnp/
.pnp.js
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
package-lock.json   # ignore if you use pnpm/volta-managed workflows; remove if you want to track

# dist / build outputs
dist/
build/
out/
.release/
*.tgz

# Nx / caching
.nx/
node_modules/.cache/
.cache/
.vite/
.next/

# Jest / coverage / test artifacts
coverage/
.nyc_output/
jest-cache/

# pnpm
.pnpm-store/
.pnpm/

# Volta
volta/
toolchain.json

# Rust
target/
**/target/

# Python
__pycache__/
*.py[cod]
*.pyo
*.pyd
venv/
.venv/
.env
.env.*            # ignore environment files (keep .env.example committed)
.python-version
.pytest_cache/

# Cargo / crates
Cargo.lock        # decide per repo; remove from ignore if you want to commit it

# Editor / IDE
.vscode/
.idea/
*.sublime-workspace
*.sublime-project

# OS
.DS_Store
Thumbs.db
ehthumbs.db
*.swp
*~

# Logs
*.log

# Secrets / keys
*.pem
*.key
secrets/
*.secret

# Docker
docker-compose.override.yml
docker-compose.*.local.yml
.env.docker

# Direnv / local envrc cache
.direnv/
# NOTE: keep or ignore .envrc depending on whether you want it tracked.
# If .envrc is repo-intended (shared dev env), do NOT ignore it.
# If it's user-specific, uncomment the next line:
# .envrc

# Misc
.idea/
coverage/
tmp/
temp/

# work directories
.tmp/
.tmp/*
